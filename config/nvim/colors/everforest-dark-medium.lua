-- Everforest theme for Neovim
-- Generated from template - do not edit manually

local M = {}

M.colors = {
  bg = '#2f383e',
  bg1 = '#374247',
  bg2 = '#404c51',
  fg = '#d3c6aa',
  red = '#e67e80',
  orange = '#e69875',
  yellow = '#dbbc7f',
  green = '#a7c080',
  aqua = '#83c092',
  blue = '#7fbbb3',
  purple = '#d699b6',
  gray1 = '#7a8478',
  gray2 = '#859289',
  gray3 = '#9da9a0',
}

M.highlights = {
  -- Editor highlights
  Normal = { fg = M.colors.fg, bg = M.colors.bg },
  NormalFloat = { fg = M.colors.fg, bg = M.colors.bg1 },
  ColorColumn = { bg = M.colors.bg1 },
  Conceal = { fg = M.colors.gray2 },
  Cursor = { fg = M.colors.bg, bg = M.colors.fg },
  lCursor = { fg = M.colors.bg, bg = M.colors.fg },
  CursorIM = { fg = M.colors.bg, bg = M.colors.fg },
  CursorColumn = { bg = M.colors.bg1 },
  CursorLine = { bg = M.colors.bg1 },
  Directory = { fg = M.colors.blue, bold = true },
  DiffAdd = { fg = M.colors.green, bg = M.colors.bg },
  DiffChange = { fg = M.colors.blue, bg = M.colors.bg },
  DiffDelete = { fg = M.colors.red, bg = M.colors.bg },
  DiffText = { fg = M.colors.yellow, bg = M.colors.bg },
  EndOfBuffer = { fg = M.colors.gray2 },
  ErrorMsg = { fg = M.colors.red, bold = true },
  VertSplit = { fg = M.colors.gray2 },
  Folded = { fg = M.colors.gray2, bg = M.colors.bg1 },
  FoldColumn = { fg = M.colors.gray2, bg = M.colors.bg },
  SignColumn = { fg = M.colors.fg, bg = M.colors.bg },
  IncSearch = { fg = M.colors.bg, bg = M.colors.orange },
  LineNr = { fg = M.colors.gray2 },
  CursorLineNr = { fg = M.colors.yellow, bold = true },
  MatchParen = { fg = M.colors.orange, bold = true },
  ModeMsg = { fg = M.colors.fg, bold = true },
  MoreMsg = { fg = M.colors.blue, bold = true },
  NonText = { fg = M.colors.gray2 },
  Pmenu = { fg = M.colors.fg, bg = M.colors.bg1 },
  PmenuSel = { fg = M.colors.bg, bg = M.colors.blue },
  PmenuSbar = { bg = M.colors.bg2 },
  PmenuThumb = { bg = M.colors.gray2 },
  Question = { fg = M.colors.yellow, bold = true },
  QuickFixLine = { fg = M.colors.bg, bg = M.colors.yellow },
  Search = { fg = M.colors.bg, bg = M.colors.yellow },
  SpecialKey = { fg = M.colors.gray2 },
  SpellBad = { fg = M.colors.red, undercurl = true },
  SpellCap = { fg = M.colors.blue, undercurl = true },
  SpellLocal = { fg = M.colors.aqua, undercurl = true },
  SpellRare = { fg = M.colors.purple, undercurl = true },
  StatusLine = { fg = M.colors.fg, bg = M.colors.bg1 },
  StatusLineNC = { fg = M.colors.gray2, bg = M.colors.bg1 },
  TabLine = { fg = M.colors.gray2, bg = M.colors.bg1 },
  TabLineFill = { fg = M.colors.gray2, bg = M.colors.bg1 },
  TabLineSel = { fg = M.colors.fg, bg = M.colors.bg },
  Title = { fg = M.colors.orange, bold = true },
  Visual = { bg = M.colors.bg2 },
  VisualNOS = { fg = M.colors.gray2 },
  WarningMsg = { fg = M.colors.yellow, bold = true },
  Whitespace = { fg = M.colors.gray2 },
  WildMenu = { fg = M.colors.bg, bg = M.colors.blue },

  -- Syntax highlighting
  Comment = { fg = M.colors.gray2 },
  Constant = { fg = M.colors.purple },
  String = { fg = M.colors.green },
  Character = { fg = M.colors.green },
  Number = { fg = M.colors.purple },
  Boolean = { fg = M.colors.purple },
  Float = { fg = M.colors.purple },
  Identifier = { fg = M.colors.blue },
  Function = { fg = M.colors.green },
  Statement = { fg = M.colors.red },
  Conditional = { fg = M.colors.red },
  Repeat = { fg = M.colors.red },
  Label = { fg = M.colors.orange },
  Operator = { fg = M.colors.orange },
  Keyword = { fg = M.colors.red },
  Exception = { fg = M.colors.red },
  PreProc = { fg = M.colors.aqua },
  Include = { fg = M.colors.blue },
  Define = { fg = M.colors.purple },
  Macro = { fg = M.colors.purple },
  PreCondit = { fg = M.colors.aqua },
  Type = { fg = M.colors.yellow },
  StorageClass = { fg = M.colors.orange },
  Structure = { fg = M.colors.aqua },
  Typedef = { fg = M.colors.yellow },
  Special = { fg = M.colors.orange },
  SpecialChar = { fg = M.colors.red },
  Tag = { fg = M.colors.orange },
  Delimiter = { fg = M.colors.gray2 },
  SpecialComment = { fg = M.colors.aqua },
  Debug = { fg = M.colors.red },
  Underlined = { fg = M.colors.blue, underline = true },
  Ignore = { fg = M.colors.gray2 },
  Error = { fg = M.colors.red, bold = true },
  Todo = { fg = M.colors.yellow, bold = true },
}

return M
